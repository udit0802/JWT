<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- Uncomment and your base-package here:-->
         <context:component-scan
            base-package="com.jwt"/>  


    <mvc:annotation-driven />
    
    <context:property-placeholder location="file:/security/config.properties" />
    
    <security:http pattern="/api/login" security="none"/>
    <security:http pattern="/api/register" security="none"/>
    
    <security:http pattern="/api/**" entry-point-ref="restAuthenticationEntryPoint" create-session="never" auto-config="false">
        <security:csrf disabled="true"/>
        <security:custom-filter before="FORM_LOGIN_FILTER" ref="jwtAuthenticationFilter"/>
        <security:intercept-url pattern="/api/patroller/**" access="hasRole('ROLE_PATROLLER')" />
        <security:intercept-url pattern="/api/nmt/**" access="hasRole('ROLE_NMT')" />
        <security:anonymous/>
    </security:http> 
    
	<bean id="restAuthenticationEntryPoint" class="com.jwt.entrypoint.RestAuthenticationEntryPoint">
    </bean>
    
    <bean id="jWTUtil" class="com.jwt.util.JWTUtil">
    </bean>
    
    <bean id="jwtAuthenticationSuccessHandler" class="com.jwt.handler.JwtAuthenticationSuccessHandler">
    </bean>
    
    <bean id="jwtAuthenticationFailureHandler" class="com.jwt.handler.JwtAuthenticationFailureHandler">
    </bean>
    
    <bean id="jwtAuthenticationFilter" class="com.jwt.auth.JwtAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager" />
        <property name="authenticationSuccessHandler" ref="jwtAuthenticationSuccessHandler" />
        <property name="authenticationFailureHandler" ref="jwtAuthenticationFailureHandler" />
    </bean>
    
    <bean id="myAuthProvider" class="com.jwt.auth.HRMSAuthentication" >
		<constructor-arg name="domain" value="india.airtel.itm" />
    	<constructor-arg name="url" value="ldap://india.airtel.itm/" />
	</bean>
	
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider ref="myAuthProvider" />
	</security:authentication-manager>
	
	<bean id="userService" class="com.jwt.business.impl.UserServiceImpl"/>
	<!-- <bean id="dataSource"
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url"
            value="jdbc:mysql://localhost:3306/springsec" />
        <property name="username" value="root" />
        <property name="password" value="" />
    </bean> -->
	<!-- <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	        Example: a logical view name of 'showMessage' is mapped to '/WEB-INF/jsp/showMessage.jsp'
	        <property name="prefix" value="/WEB-INF/view/"/>
	        <property name="suffix" value=".jsp"/>
	</bean> -->

</beans>
